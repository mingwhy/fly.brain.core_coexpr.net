length(fly.prot) # 30719 fly proteins in total of fly genome in this database
sum(df2017$prot_id %in% fly.prot) #13624 overlap genes
# get flybase ID for each fly prot_id
df.fly.prot<-AnnotationDbi::select(org.Dm.eg.db,
keys=df2017$prot_id,
keytype="FLYBASEPROT",c("FLYBASECG","FLYBASE",'SYMBOL',"GENENAME"))
dim(df.fly.prot) #13794     5
sum(is.na(df.fly.prot$FLYBASE)) #170, equals 13794-13624
sum(is.na(df.fly.prot$SYMBOL)) #170, equals 13794-13624
gene.age=merge(df.fly.prot,df2017,by.x='FLYBASEPROT',by.y='prot_id')
dim(gene.age) #13794
table(gene.age$phylostrata)
sum(is.na(gene.age$FLYBASE)) #170 genes without FLYBASE id.
sum(table(gene.age$phylostrata)) #13794 genes in df2017 publication
gene.age2=gene.age[!is.na(gene.age$FLYBASE),]
dim(gene.age2) #13624 genes
head(gene.age2)
length(unique(gene.age2$SYMBOL)) #13624 fly symbols
gene.age=gene.age2
#####################################################
## age signature
age.group=list();
for(i in unique(gene.module.info$module)){
genes=gene.module.info[gene.module.info$module==i,]$gene
sum(genes %in% gene.age$SYMBOL )
age.group[[as.character(i)]]=gene.age[gene.age$SYMBOL %in% genes,]
}
gene.module=gene.module.info$module
colors = structure(c('white','#52854C'),names = c('0', '1'))
#col_func=circlize::colorRamp2(sort(unique(gene.module)), brewer.pal(max(gene.module),"Paired"))
col_func=colorRamp2(sort(unique(gene.module)),
col=c( "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7"))
pick.row.cols=col_func(1:max(gene.module)) #module color for 1,2,...
sapply(age.group,dim)
age.group.df=Reduce(`rbind`,age.group)
age.group.df$module.id= rep(1:length(age.group),sapply(age.group,nrow))
age.group.df$module.name=age.group.df$module.id
df=age.group.df %>% group_by(phylostrata,phylostrata_name,module.id,module.name) %>% summarise(ngene=n())
df$module.id=factor(df$module.id)
df$color=pick.row.cols[as.numeric(as.character(df$module.id))] #module color
df$phylostrata_name=as.character(df$phylostrata_name)
df[df$phylostrata_name=='cellular_organisms',]$phylostrata_name='CellLife'
df[!duplicated(df$phylostrata),]$phylostrata_name
df$phylostrata_name=factor(df$phylostrata_name,levels=
df[!duplicated(df$phylostrata),]$phylostrata_name)
df1=df %>% group_by(module.id) %>% mutate(ngene.total=sum(ngene))
df1$prop=df1$ngene/df1$ngene.total
df1$module.id=as.numeric(as.character(df1$module.id))
tmp1=merge(as.data.frame(gene.module.info),df1[,c('module.id','color')],by.x='module',by.y='module.id')
tmp1$rgb=apply(col2rgb(tmp1$color),2,function(i){paste(i,collapse = '-')})
# get gene description for genes
tmp2=tmp1[!duplicated(tmp1$gene),];
dim(tmp2) #178 genes
write.table(tmp2,file=paste0(out.dir,'/cut',cut,'_net_module_gene.txt'),quote=F,sep='\t',row.names = F)
tmp2.out=AnnotationDbi::select(org.Dm.eg.db,keys=tmp2$gene,keytype='SYMBOL',c("FLYBASE","SYMBOL", "GENENAME"))
tmp3=merge(tmp2.out,tmp2[,c(1,2)],by.x='SYMBOL',by.y='gene',all.x=T)
tmp3=tmp3[order(tmp3$module),]
write.table(tmp3,file=paste0(out.dir,'cut',cut,'_net_module_gene_name.txt'),quote=F,sep='\t',row.names = F)
write.table(age.group.df[,c(9,4,3,5,6,8)],file=paste0(out.dir,'cut',cut,'_age.group.df.txt'),quote=F,sep='\t',row.names = F)
print( ggplot(age.group.df,aes(x=phylostrata))+
geom_bar()+theme_bw(base_size = 16)+
scale_x_continuous(breaks=1:max(age.group.df$phylostrata))+
facet_wrap(.~module.name,ncol=1,scales="free_y") )
pdf(paste0(out.dir,'cut',cut,'_MCL_modules_age.pdf'),
height = 9,width = 14)
print( ggplot(df1,aes(x=phylostrata_name,y=module.name,size=prop))+
geom_point(col=df1$color)+theme_bw(base_size = 16)+
xlab('Gene age (old<->young)')+ylab('Module')+
scale_y_continuous(breaks=unique(df$module.name),labels=unique(df$module.name))+
#scale_color_manual(values=rev(c('#68369b','#2e6fba','#4ead5b','#b89130')))+
#scale_color_manual(values=c('#68369b','#2e6fba','#4ead5b','#b89130'))+
#scale_x_continuous(breaks=1:max(age.group.df$phylostrata))+
scale_size(name='Percentage',range = c(4,12))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x=element_text(size=26,angle=45,hjust=1),
axis.text.y=element_text(size=26),
axis.title=element_text(size=26,face='bold'),
legend.key.size = unit(0.5, 'cm'),
legend.key.height = unit(0.5, 'cm'),
legend.key.width = unit(0.5, 'cm'),
#legend.position = 'none',
legend.title=element_text(size=22,face="bold"),
legend.text=element_text(size=20),
plot.margin=unit(c(1.5, 2, 2, 5.5),"cm")) +
guides(colour = FALSE ) );
dev.off();
max(gene.module)
col_func
row.cols
unique(row.cols)
# locate the core, find modules and perform GO enrichment
options(stringsAsFactors = F)
library(igraph)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(RColorBrewer)
library(readxl)
library(org.Dm.eg.db,verbose=F,quietly=T)
source('./src_fly_go_enrichment.R')
library(MCL)
library(simplifyEnrichment)
library(ComplexHeatmap)
library(circlize) #for colorRamp2
out.dir='cytospace/';cut=12
x=readRDS('extract_core.rds')
net1=x$cores[[1]]
dim(net1) #1428 genes
################################################################################
## https://rdrr.io/cran/MCL/man/mcl.html
g<-igraph::graph_from_adjacency_matrix(net1,mode='undirected',weighted = NULL,diag=F)
#wtc <- cluster_walktrap(g,steps = 6)
wtc <- cluster_walktrap(g,steps = 4)
modularity(wtc);modularity(g, membership(wtc))
#length(wtc$membership);table(wtc$membership)
genes=rownames(net1)
pick.module.id=which(table(wtc$membership)>5)
pick.module.id
keep.genes=lapply(pick.module.id,function(i){
genes[wtc$membership==i]
})
sapply(keep.genes,length)
# 1   3   5   8  10
# 84 503 220 300 188
genes.order=unlist(keep.genes)
gene.module=rep(1:length(keep.genes),sapply(keep.genes,length))
mat=net1[genes.order,genes.order] #smaller than net1
gene.module.info=data.frame(gene=genes.order,module=gene.module)
data.table::fwrite(gene.module.info,file=paste0(out.dir,'cut',cut,'_gene_module.txt'),quote=F,sep='\t',row.names = F)
dim(mat) #1295 by 1295 genes, genes with module membership
dim(mat) #1292 by 1292 genes, genes with module membership
mat[mat==T]=1
mat[mat==F]=0
g<-igraph::graph_from_adjacency_matrix(mat,mode='undirected',weighted = NULL,diag=F)
df.g<-igraph::as_data_frame(g)
df.g$edge=1
data.table::fwrite(df.g,file=paste0(out.dir,'cut',cut,'_net_module.txt'),quote=F,sep='\t',row.names = F)
# simpliest plot
colors = structure(c('white','#52854C'),names = c('0', '1'))
col_func=colorRamp2(sort(unique(gene.module)),
col=c( "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7"))
col_func=colorRamp2(sort(unique(gene.module)),
col=c( "#E69F00", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7"))
barplot(1:6,col=c( "#E69F00", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7"))
# locate the core, find modules and perform GO enrichment
options(stringsAsFactors = F)
library(igraph)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(RColorBrewer)
library(readxl)
library(org.Dm.eg.db,verbose=F,quietly=T)
source('./src_fly_go_enrichment.R')
library(MCL)
library(simplifyEnrichment)
library(ComplexHeatmap)
library(circlize) #for colorRamp2
out.dir='cytospace/';cut=12
x=readRDS('extract_core.rds')
net1=x$cores[[1]]
dim(net1) #1428 genes
################################################################################
## https://rdrr.io/cran/MCL/man/mcl.html
g<-igraph::graph_from_adjacency_matrix(net1,mode='undirected',weighted = NULL,diag=F)
#wtc <- cluster_walktrap(g,steps = 6)
wtc <- cluster_walktrap(g,steps = 4)
modularity(wtc);modularity(g, membership(wtc))
#length(wtc$membership);table(wtc$membership)
genes=rownames(net1)
pick.module.id=which(table(wtc$membership)>5)
pick.module.id
keep.genes=lapply(pick.module.id,function(i){
genes[wtc$membership==i]
})
sapply(keep.genes,length)
# 1   3   5   8  10
# 84 503 220 300 188
#1   2   4   5   7  10
#237 104 397 323 225   6
if(F){
#wc=mcl(x = net1, addLoops = TRUE, expansion=3,allow1 = F,inflation = 1.4,max.iter = 10000); #sn
wc=mcl(x = net1, addLoops = TRUE, expansion=2,allow1 = F,inflation = 8,max.iter = 10000); #sn
table(wc$Cluster)
sum(table(wc$Cluster)[names(which(table(wc$Cluster)>=5))])
pick.module.id=names(which(table(wc$Cluster)>=5))
pick.module.id
keep.genes=sapply(pick.module.id,function(i){
rownames(net1)[wc$Cluster==i]
})
}
genes.order=unlist(keep.genes)
gene.module=rep(1:length(keep.genes),sapply(keep.genes,length))
mat=net1[genes.order,genes.order] #smaller than net1
gene.module.info=data.frame(gene=genes.order,module=gene.module)
data.table::fwrite(gene.module.info,file=paste0(out.dir,'cut',cut,'_gene_module.txt'),quote=F,sep='\t',row.names = F)
dim(mat) #1292 by 1292 genes, genes with module membership
mat[mat==T]=1
mat[mat==F]=0
g<-igraph::graph_from_adjacency_matrix(mat,mode='undirected',weighted = NULL,diag=F)
df.g<-igraph::as_data_frame(g)
df.g$edge=1
data.table::fwrite(df.g,file=paste0(out.dir,'cut',cut,'_net_module.txt'),quote=F,sep='\t',row.names = F)
# simpliest plot
colors = structure(c('white','#52854C'),names = c('0', '1'))
col_func=colorRamp2(sort(unique(gene.module)),
col=c( "#E69F00", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7"))
pick.row.cols=col_func(1:max(gene.module)) #module color for 1,2,...
row.cols=pick.row.cols[gene.module]
gene.module.info$color=row.cols
x=col2rgb(gene.module.info$color)
gene.module.info$rgb=apply(as.matrix(x),2,function(i){paste(i,collapse='-')})
data.table::fwrite(gene.module.info,file=paste0(out.dir,'cut',cut,'_net_module_gene_color.txt'),quote=F,sep='\t',row.names = F)
ht_opt$TITLE_PADDING = unit(c(4, 4), "points")
row_ha = rowAnnotation(module=gene.module,col=list(module=col_func),show_legend =FALSE);
Heatmap(mat,col = colors,
row_order=rownames(mat),column_order=colnames(mat),
#top_annotation = HeatmapAnnotation(module=gene.module,col=list(module=col_func),show_legend =FALSE),
left_annotation = row_ha,
#row_title_gp = gpar(fill = unique(row.cols), font = 1:max(wc$membership)),
column_names_gp = gpar(col=rep(NA,ncol(mat))),
#row_names_gp = gpar(col=rep(NA,ncol(mat1))),
#column_names_gp = gpar(col = row.cols,fontsize = 5),
row_names_gp = gpar(col = row.cols,fontsize =4),
heatmap_width = unit(12, "cm"), heatmap_height = unit(16, "cm"),
show_heatmap_legend = FALSE,
row_gap = unit(0, "mm"), column_gap = unit(0, "mm"),
#rect_gp = gpar(col = "grey", lwd = 2),
#cluster_columns=FALSE, cluster_column_slices = FALSE,
#border=T)->ht
border=T,row_split =paste('module', gene.module),
column_split =paste('module', gene.module),name = "foo")->ht0
#column_split =factor(as.character(gene.module)),name = "foo")->ht
rownames(mat) #gene names
ht<-Heatmap(mat,col = colors,
row_order=rownames(mat),column_order=colnames(mat),
column_names_gp = gpar(col=rep(NA,ncol(mat))),
#row_names_gp = gpar(col = row.cols,fontsize =3),
row_names_gp = gpar(col = row.cols,fontsize =0),
#heatmap_width = unit(20, "cm"), heatmap_height = unit(24, "cm"),
heatmap_width = unit(18, "cm"), heatmap_height = unit(20, "cm"),
show_heatmap_legend = FALSE,
row_gap = unit(0, "mm"), column_gap = unit(0, "mm"),
border=T,
column_split =paste('module', gene.module),column_title='NA',
row_split =paste('module', gene.module),row_title_rot = 0,
left_annotation = row_ha,
name = "foo")
#ht
# top bar, from left to right, module 1,2,...
table(gene.module)
#draw(ht, padding = unit(c(4, 2, 10, 0), "cm")) # add space for titles
## GO annotation of the modules
go.outfile=paste0(out.dir,'cut',cut,'_MCL.module_GO.result.rds')
if(!file.exists(go.outfile)){
GO.result=list();
for(i in unique(gene.module.info$module)){
genes=gene.module.info[gene.module.info$module==i,]$gene
out=GOenrich(genes,category='BP',cutoff=0.7) #larger cutoff, smaller returned GO terms
x1=out;
x1$GeneRatio1=x1$GeneRatio
x1$GeneRatio=sapply(x1$GeneRatio,function(x){
p=as.numeric(unlist(strsplit(x,'/')))
p[1]/p[2]
})
summary(x1$GeneRatio)
sum(is.na(x1$Description))
x1=x1[!is.na(x1$Description),]
x1=x1[order(x1$p.adjust),]
#x1=x1[x1$Count>=5,]
x1$desp=factor(x1$Description,levels=rev(x1$Description))
GO.result[[i]]=x1;
}
saveRDS(GO.result,go.outfile)
}
## plot GO result
plots=list();plots2=list();plots3=list();
library(grDevices) #for using transparent colors
GO.result=readRDS(go.outfile)
for(i in unique(gene.module.info$module)){
genes=gene.module.info[gene.module.info$module==i,]$gene
x1=GO.result[[i]];
x1=x1[order(x1$p.adjust),]
#x1=x1[x1$Count>=5,]
x1$desp=factor(x1$Description,levels=rev(x1$Description))
count.cut=3; #minimal GO term gene count
#if(i==4){count.cut=0}else{count.cut=3}
#plots[[i]]<-ggplot(subset(x1,Count>=3),aes(x=GeneRatio,y=desp,size=Count,col=p.adjust))+
plots[[i]]<-ggplot(subset(x1,Count>=count.cut),aes(x=GeneRatio,y=desp,size=Count,col=p.adjust))+
geom_point()+theme_bw(base_size=14)+
scale_color_gradient(low="blue", high="red")+
scale_size(range = c(2,8))+
#scale_y_discrete(labels=y.lab.text)+
#scale_size(breaks = seq(10,120,30))+
#ylab('desp, Molecular Function')+
#ylab(basename(file))+
#ylab('Biological Process GO enrichment analysis of tissue specific genes')+
ylab('')+
ggtitle(paste0('module ',i,', #gene ',length(genes)))+
theme(
plot.title =element_text(size=20, face='bold'),
panel.grid = element_blank(),
axis.text=element_text(size=14),
axis.title=element_text(size=20),
axis.text.x=element_text(size=20,angle=45, hjust=1),
axis.text.y=element_text(size=24,angle=0, hjust=1),
axis.ticks.y = element_blank())
#write.table(x1,'module2.go.txt',quote=F,row.names = F)
x1$log.p.adjust=-1*log(x1$p.adjust,base=10)
x2=x1;
x2$desp=as.character(x2$desp)
x2$x.axis=x2$desp
if(nrow(x2)>=6){
x2=x2[1:6,];
x2$x.axis=factor(x2$x.axis,levels=rev(x2$x.axis))
}else{
x2$x.axis=factor(x2$x.axis,levels=rev(x2$x.axis))
}
#plots2[[i]]<- ggplot(subset(x2,Count>=count.cut),aes(x=desp,y=log.p.adjust))+
plots2[[i]]<- ggplot(x2,aes(x=x.axis,y=log.p.adjust))+
geom_bar(fill=adjustcolor('grey10',alpha.f =0.2),stat='identity',width=0.9)+
coord_flip()+
#geom_text(aes(label=desp),vjust=0,hjust = "inward",size=6)+
#geom_text(aes(label=desp),y=0,vjust=0,hjust = 0,size=6)+
geom_text(aes(label=desp),y=max(x2$log.p.adjust*0.01),vjust=0,hjust = 0,size=10)+
theme_bw(base_size=24)+ylab('-log10(p.adjust)')+xlab('')+
#scale_x_discrete(expand = expansion(mult = c(0, 0))) +
ggtitle(paste('module',i))+
scale_y_continuous(expand = expansion(mult = c(0, 0.02)),limits = c(0, NA))+
theme(legend.position = 'none',
axis.title = element_text(size=22),
axis.text.y=element_blank(),
axis.text.x=element_text(size=20),
plot.title = element_text(size = 20, face = "bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plots3[[i]]<-ggplot(x2,aes(x=x.axis,y=log.p.adjust))+
#geom_bar(fill=adjustcolor('grey10',alpha.f =0.2),stat='identity',width=0.9)+
geom_bar(fill=pick.row.cols[i],stat='identity',width=0.05)+
geom_point(col=pick.row.cols[i],size=6)+
coord_flip()+
geom_text(aes(label=desp),y=max(x2$log.p.adjust*0.01),vjust=-0.2,hjust = 0,size=8)+
theme_bw(base_size=20)+ylab('-log10(p.adjust)')+xlab('')+
ggtitle(paste('module',i))+
scale_y_continuous(expand = expansion(mult = c(0, 0.02)),limits = c(0, NA))+
theme(legend.position = 'none',
axis.title = element_text(size=22),
axis.text.y=element_blank(),
axis.text.x=element_text(size=20),
plot.title = element_text(size = 20, face = "bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
}
pdf(paste0(out.dir,'cut',cut,'_module_GO.pdf'),
width = 20,height = 16,useDingbats = T)
grid.arrange(grobs = plots3, ncol=2)
dev.off()
pdf(paste0(out.dir,'cut',cut,'_MCL_modules_GO.pdf'),height = 22,width = 18)
#draw(ht0, padding = unit(c(-10, 1, 5, 1), "mm"))
draw(ht, padding = unit(c(-10, 1, 5, 1), "mm")) # add space for titles
#draw(ht) # add space for titles
if(F){
lay <- rbind(c(1,1,2,4),
c(1,1,3,5),
c(6,6,6,7),
c(6,6,6,7));
grid.arrange(grobs = plots, ncol=2)
grid.arrange(grobs = plots2, ncol=2)
}
dev.off();
## output all enriched GO terms
GO.result=readRDS(go.outfile)
df.go=Reduce(`rbind`,GO.result)
df.go=as.data.frame(df.go)
df.go$module.id=rep(1:length(GO.result),sapply(GO.result,nrow))
dim(df.go)
write.table(df.go,paste0(out.dir,'cut',cut,'_all.enriched.go.terms.txt'),quote=F,row.names = F,sep='\t')
# plot module gene member age
options(stringsAsFactors = F)
library(igraph)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(RColorBrewer)
library(readxl)
library(circlize)
library(org.Dm.eg.db,verbose=F,quietly=T)
out.dir='cytospace/';cut=12;
gene.module.info=data.table::fread('cytospace/cut12_gene_module.txt');
dim(gene.module.info)
# 1295 genes have a module membership
####################################################################
## read in fly gene age data from 'No Evidence for Phylostratigraphic Bias Impacting Inferences on Patterns of Gene Emergence and Evolution'
# more information can be found here: https://github.com/mingwhy/bioinfo_homemade_tools/tree/main/Phylostratigraphy_fly.gene_age
div.times=c(25,235,325,521,542,560,573,615,653,1547,2100,3900);
length(div.times)
df2017<-read_excel('../external_data/phylostratigraphy_fly.gene.age/TableS1.xlsx',sheet='Dmel_updated_phylostratigraphy',skip=3)
dim(df2017) #13794     4
table(df2017$phylostrata)
# this data contain protein ids
# check the overlap genes between fly  prot_id in 2017.dataset and fly.prot from org.Dm.eg.db.
columns(org.Dm.eg.db)
fly.prot<-keys(org.Dm.eg.db, keytype='FLYBASEPROT')
length(fly.prot) # 30719 fly proteins in total of fly genome in this database
sum(df2017$prot_id %in% fly.prot) #13624 overlap genes
# get flybase ID for each fly prot_id
df.fly.prot<-AnnotationDbi::select(org.Dm.eg.db,
keys=df2017$prot_id,
keytype="FLYBASEPROT",c("FLYBASECG","FLYBASE",'SYMBOL',"GENENAME"))
dim(df.fly.prot) #13794     5
sum(is.na(df.fly.prot$FLYBASE)) #170, equals 13794-13624
sum(is.na(df.fly.prot$SYMBOL)) #170, equals 13794-13624
gene.age=merge(df.fly.prot,df2017,by.x='FLYBASEPROT',by.y='prot_id')
dim(gene.age) #13794
table(gene.age$phylostrata)
sum(is.na(gene.age$FLYBASE)) #170 genes without FLYBASE id.
sum(table(gene.age$phylostrata)) #13794 genes in df2017 publication
gene.age2=gene.age[!is.na(gene.age$FLYBASE),]
dim(gene.age2) #13624 genes
head(gene.age2)
length(unique(gene.age2$SYMBOL)) #13624 fly symbols
gene.age=gene.age2
#####################################################
## age signature
age.group=list();
for(i in unique(gene.module.info$module)){
genes=gene.module.info[gene.module.info$module==i,]$gene
sum(genes %in% gene.age$SYMBOL )
age.group[[as.character(i)]]=gene.age[gene.age$SYMBOL %in% genes,]
}
gene.module=gene.module.info$module
colors = structure(c('white','#52854C'),names = c('0', '1'))
#col_func=circlize::colorRamp2(sort(unique(gene.module)), brewer.pal(max(gene.module),"Paired"))
col_func=colorRamp2(sort(unique(gene.module)),
col=c( "#E69F00", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7"))
pick.row.cols=col_func(1:max(gene.module)) #module color for 1,2,...
sapply(age.group,dim)
age.group.df=Reduce(`rbind`,age.group)
age.group.df$module.id= rep(1:length(age.group),sapply(age.group,nrow))
age.group.df$module.name=age.group.df$module.id
df=age.group.df %>% group_by(phylostrata,phylostrata_name,module.id,module.name) %>% summarise(ngene=n())
df$module.id=factor(df$module.id)
df$color=pick.row.cols[as.numeric(as.character(df$module.id))] #module color
df$phylostrata_name=as.character(df$phylostrata_name)
df[df$phylostrata_name=='cellular_organisms',]$phylostrata_name='CellLife'
df[!duplicated(df$phylostrata),]$phylostrata_name
df$phylostrata_name=factor(df$phylostrata_name,levels=
df[!duplicated(df$phylostrata),]$phylostrata_name)
df1=df %>% group_by(module.id) %>% mutate(ngene.total=sum(ngene))
df1$prop=df1$ngene/df1$ngene.total
df1$module.id=as.numeric(as.character(df1$module.id))
tmp1=merge(as.data.frame(gene.module.info),df1[,c('module.id','color')],by.x='module',by.y='module.id')
tmp1$rgb=apply(col2rgb(tmp1$color),2,function(i){paste(i,collapse = '-')})
# get gene description for genes
tmp2=tmp1[!duplicated(tmp1$gene),];
dim(tmp2) #178 genes
write.table(tmp2,file=paste0(out.dir,'/cut',cut,'_net_module_gene.txt'),quote=F,sep='\t',row.names = F)
tmp2.out=AnnotationDbi::select(org.Dm.eg.db,keys=tmp2$gene,keytype='SYMBOL',c("FLYBASE","SYMBOL", "GENENAME"))
tmp3=merge(tmp2.out,tmp2[,c(1,2)],by.x='SYMBOL',by.y='gene',all.x=T)
tmp3=tmp3[order(tmp3$module),]
write.table(tmp3,file=paste0(out.dir,'cut',cut,'_net_module_gene_name.txt'),quote=F,sep='\t',row.names = F)
write.table(age.group.df[,c(9,4,3,5,6,8)],file=paste0(out.dir,'cut',cut,'_age.group.df.txt'),quote=F,sep='\t',row.names = F)
print( ggplot(age.group.df,aes(x=phylostrata))+
geom_bar()+theme_bw(base_size = 16)+
scale_x_continuous(breaks=1:max(age.group.df$phylostrata))+
facet_wrap(.~module.name,ncol=1,scales="free_y") )
pdf(paste0(out.dir,'cut',cut,'_MCL_modules_age.pdf'),
height = 9,width = 14)
print( ggplot(df1,aes(x=phylostrata_name,y=module.name,size=prop))+
geom_point(col=df1$color)+theme_bw(base_size = 16)+
xlab('Gene age (old<->young)')+ylab('Module')+
scale_y_continuous(breaks=unique(df$module.name),labels=unique(df$module.name))+
#scale_color_manual(values=rev(c('#68369b','#2e6fba','#4ead5b','#b89130')))+
#scale_color_manual(values=c('#68369b','#2e6fba','#4ead5b','#b89130'))+
#scale_x_continuous(breaks=1:max(age.group.df$phylostrata))+
scale_size(name='Percentage',range = c(4,12))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x=element_text(size=26,angle=45,hjust=1),
axis.text.y=element_text(size=26),
axis.title=element_text(size=26,face='bold'),
legend.key.size = unit(0.5, 'cm'),
legend.key.height = unit(0.5, 'cm'),
legend.key.width = unit(0.5, 'cm'),
#legend.position = 'none',
legend.title=element_text(size=22,face="bold"),
legend.text=element_text(size=20),
plot.margin=unit(c(1.5, 2, 2, 5.5),"cm")) +
guides(colour = FALSE ) );
dev.off();
dim(net1)
#wc=mcl(x = net1, addLoops = TRUE, expansion=3,allow1 = F,inflation = 1.4,max.iter = 10000); #sn
wc=mcl(x = net1, addLoops = TRUE, expansion=2,allow1 = F,inflation = 8,max.iter = 10000); #sn
table(wc$Cluster)
sum(table(wc$Cluster)[names(which(table(wc$Cluster)>=5))])
pick.module.id=names(which(table(wc$Cluster)>=5))
pick.module.id
#wc=mcl(x = net1, addLoops = TRUE, expansion=3,allow1 = F,inflation = 1.4,max.iter = 10000); #sn
wc=mcl(x = net1, addLoops = TRUE, expansion=2,allow1 = F,inflation = 5,max.iter = 10000); #sn
table(wc$Cluster)
sum(table(wc$Cluster)[names(which(table(wc$Cluster)>=5))])
pick.module.id=names(which(table(wc$Cluster)>=5))
pick.module.id
